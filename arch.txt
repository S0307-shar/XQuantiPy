constants.py
============
Variables:
    - RISK_FREE_RATE
    - PERIOD
    - MOVING_AVERAGE_PERIOD
    - BENCHMARK_INDEX
    - BASE_OPTIONS_URL
    - HEADERS
    - MACRO_INDICATORS
    - COUNTRY_CODES

fetcher
    scraper.py
    ==========
    Fetcher:
        Methods:
            - get_data(indicator, country_code, dates)
            - _convert_to_numeric(self, value)

economics
    macro.py
    ========
    Macro(object):
        Instance Variables:
            - country
        Methods:
            - get_macros(self, filters = [], period = constants.PERIOD)

    analysis.py 
    ===========
    Analysis(object):
        Instance Variables:
            - macros
        Methods:
            - get_merged_macro(self, filter = None, period=constants.PERIOD)
            - visualize(self, filter=None, period=constants.PERIOD)

stocks
    ticker.py
    =========
    Ticker(object):
        Instance Variables:
            - stock
            - period
            - data
            - fundamentals
        Methods:
            - get_adj_close(self)
            - get_beta(self)
            - get_alpha(self, index = constants.BENCHMARK_INDEX, risk_free_rate=constants.RISK_FREE_RATE)
            - show_moving_average(self, period = [constants.MOVING_AVERAGE_PERIOD])
            - show_moving_average_convergence_divergence(self, fastperiod=12, slowperiod=26, signalperiod=9)
            - show_parabolic_sar(self, af=0.02, max_af=0.2)
            - show_bollinger_bands(self, period=constants.MOVING_AVERAGE_PERIOD)

    analysis.py
    ===========
    Analysis(object):
        Instance Variables:
            - tickers
        Methods:
            - show_alpha_vs_beta(self, index = constants.BENCHMARK_INDEX, risk_free_rate = constants.RISK_FREE_RATE)
            - get_merged_adj_close(self)
            - show_merged_adj_close_chart(self)


